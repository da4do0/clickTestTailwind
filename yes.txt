/* import React, {useState} from "react";

import ReactDOM from "react-dom/client";
import "./index.css";
import { createBrowserRouter, RouterProvider } from "react-router-dom";
import { createClient } from "@supabase/supabase-js";
import { Auth } from "@supabase/auth-ui-react";
import { ThemeSupa } from "@supabase/auth-ui-shared";



import Header from "./routes/header";
import Main from "./routes/main/mainContainer";
import User from "./routes/user/user";

const router = createBrowserRouter([
  {
    path: "/",
    element: <Header />,
    children: [
      {
        index: true,
        element: <Main />,
      },
      {
        path: "/user",
        element: <User />,
      },
    ],
  },
]);

const supabase = createClient('https://olntpareikffpwormsze.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sbnRwYXJlaWtmZnB3b3Jtc3plIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTc2NTgzNzMsImV4cCI6MjAzMzIzNDM3M30.20JwG2r_fOCoXAZsW1gxvVi5LDf8n_z6bCT_FpXOga0')

const [session, setSession] = useSessionContext(null);

useEffect(() => {
  supabase.auth.getSession().then(({ data: { session } }) => {
    setSession(session)
  })

  const {
    data: { subscription },
  } = supabase.auth.onAuthStateChange((_event, session) => {
    setSession(session)
  })

  return () => subscription.unsubscribe()
}, [])

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <RouterProvider router={router} />
  </React.StrictMode>
);
 */
